config append --set omero.web.apps '"omero_oauth"'

config set omero.web.oauth.client.name google

# https://console.developers.google.com/apis/credentials
config set omero.web.oauth.client.id CLIENT_ID
config set omero.web.oauth.client.secret SECRET_ID

config set omero.web.oauth.client.scope '["openid", "https://www.googleapis.com/auth/userinfo.email", "https://www.googleapis.com/auth/userinfo.profile"]'

config set omero.web.oauth.userinfo.type openid

# These URLs will be found using OpenID discovery, uncomment to override:
#config set omero.web.oauth.url.authorization https://accounts.google.com/o/oauth2/v2/auth
#config set omero.web.oauth.url.token https://oauth2.googleapis.com/token
#config set omero.web.oauth.url.userinfo https://openidconnect.googleapis.com/v1/userinfo

# force to always make user click authorize
config set omero.web.oauth.authorization.params '{"prompt":"select_account"}'

# OpenID issuer, required for auto-discovery
config set omero.web.oauth.openid.issuer https://accounts.google.com
# Uncomment to enable verification
#config set omero.web.oauth.openid.verify true

# Set these to your omero server. The admin user can be a light-admin who can
# create users, groups, and user sessions using sudo
config set omero.web.oauth.host OMERO.SERVER
config set omero.web.oauth.admin.user OMERO-ADMIN
config set omero.web.oauth.admin.password OMERO-ADMIN-PASSWORD

# OMERO user name, template must contain {sub}
config set omero.web.oauth.user.name google-{sub}
config set omero.web.oauth.user.email {email}
config set omero.web.oauth.user.firstname {given_name}
config set omero.web.oauth.user.lastname {family_name}

# The group that new users will be added to
config set omero.web.oauth.group.name google
